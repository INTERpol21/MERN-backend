
Записываем в package.json, что бы node.js мог работать с импортом 
"type": "module",
начинаем работу с разрешения импорта node.js, получения и возвращения информации на сервере и запуска сервера на localhost 4444
import express from "express";
const app = express();
////////////////////////////////////////////////////////////////////////////
npm install nodemon
"start:dev": "nodemon index.js"(in package.json)
npm run start:dev
////////////////////////////////////////////////////////////////////////////
Установка и импорт JWT(Шифрование данных и авторизация пользователя  )
$npm install jsonwebtoken 
////////////////////////////////////////////////////////////////////////////
$ npm install mongoose
Подключаем облако от Mongodb и создаем базу данных для имейлов, паролей(Хеша), логина 
Создаем МОДЕЛЬ(форму регистрации) в models/User.js
////////////////////////////////////////////////////////////////////////////
Устанавливаем библиотеку для проверки ввода, валидации
$ npm install express-validator  
Создаем validations/auth.js и импортируем файл в index.js
////////////////////////////////////////////////////////////////////////////
Устанавливаем библиотеку для хеширования паролей
 $ npm install bcrypt
Создаем с помощью Async/await регистрацию и авторизацию и пишем через уловитель ошибок try/catch. 
////////////////////////////////////////////////////////////////////////////
Создаем функцию посредник (middleware) utils/checkAuth.js. 
Функция будет проверять можно ли возвращать какую то секретную информацию пользователю
////////////////////////////////////////////////////////////////////////////
Переносим все методы для удобства в controllers, настраиваем импорты и экспорты. 
////////////////////////////////////////////////////////////////////////////
Создаем и объединяем validations для всех валидации в один файл/настраиваем импорт в index.js
////////////////////////////////////////////////////////////////////////////
Создаем модуль в models.Post.js
////////////////////////////////////////////////////////////////////////////
Создаем PostController.js для Создание, удаления, редактирование, получение одной или всех статей
////////////////////////////////////////////////////////////////////////////
Устанавливаем библиотеку multer для работы с картинками 
////////////////////////////////////////////////////////////////////////////
Рефакторим бек, перемешаем файлы в index и меняем импорты 
